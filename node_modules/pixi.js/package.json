{
  "_args": [
    [
      {
        "hosted": {
          "directUrl": "https://raw.githubusercontent.com/jiborobot/pixi.js/dev/package.json",
          "gitUrl": "git://github.com/jiborobot/pixi.js.git#dev",
          "httpsUrl": "git+https://github.com/jiborobot/pixi.js.git#dev",
          "shortcut": "github:jiborobot/pixi.js#dev",
          "ssh": "git@github.com:jiborobot/pixi.js.git#dev",
          "sshUrl": "git+ssh://git@github.com/jiborobot/pixi.js.git#dev",
          "type": "github"
        },
        "name": "pixi.js",
        "raw": "pixi.js@git+https://github.com/jiborobot/pixi.js.git#dev",
        "rawSpec": "git+https://github.com/jiborobot/pixi.js.git#dev",
        "scope": null,
        "spec": "git+https://github.com/jiborobot/pixi.js.git#dev",
        "type": "hosted"
      },
      "C:\\Users\\bmulreni\\github\\facetest\\node_modules\\pixi-animate"
    ]
  ],
  "_from": "git+https://github.com/jiborobot/pixi.js.git#dev",
  "_id": "pixi.js@4.0.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/pixi.js",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/jiborobot/pixi.js/dev/package.json",
      "gitUrl": "git://github.com/jiborobot/pixi.js.git#dev",
      "httpsUrl": "git+https://github.com/jiborobot/pixi.js.git#dev",
      "shortcut": "github:jiborobot/pixi.js#dev",
      "ssh": "git@github.com:jiborobot/pixi.js.git#dev",
      "sshUrl": "git+ssh://git@github.com/jiborobot/pixi.js.git#dev",
      "type": "github"
    },
    "name": "pixi.js",
    "raw": "pixi.js@git+https://github.com/jiborobot/pixi.js.git#dev",
    "rawSpec": "git+https://github.com/jiborobot/pixi.js.git#dev",
    "scope": null,
    "spec": "git+https://github.com/jiborobot/pixi.js.git#dev",
    "type": "hosted"
  },
  "_requiredBy": [
    "/pixi-animate"
  ],
  "_resolved": "git+https://github.com/jiborobot/pixi.js.git#570b1726f63e5972ee20bd92730b527ee5797e1b",
  "_shasum": "2a9760bec4e4aa27a153b00868609a1f9395a9d4",
  "_shrinkwrap": null,
  "_spec": "pixi.js@git+https://github.com/jiborobot/pixi.js.git#dev",
  "_where": "C:\\Users\\bmulreni\\github\\facetest\\node_modules\\pixi-animate",
  "author": {
    "name": "Mat Groves"
  },
  "browserify": {
    "transform": [
      "glslify",
      "browserify-versionify"
    ]
  },
  "bugs": {
    "url": "https://github.com/pixijs/pixi.js/issues"
  },
  "contributors": [
    {
      "email": "chad@pantherdev.com",
      "name": "Chad Engler"
    },
    {
      "email": "rdavey@gmail.com",
      "name": "Richard Davey"
    }
  ],
  "dependencies": {
    "async": "^1.5.2",
    "bit-twiddle": "^1.0.2",
    "earcut": "^2.0.7",
    "eventemitter3": "^1.1.1",
    "glslify": "^5.0.2",
    "ismobilejs": "^0.4.0",
    "object-assign": "^4.0.1",
    "pixi-gl-core": "^1.0.2",
    "resource-loader": "^1.6.4"
  },
  "description": "Pixi.js is a fast lightweight 2D library that works across all devices.",
  "devDependencies": {
    "browserify": "^13.0.1",
    "browserify-versionify": "^1.0.6",
    "chai": "^3.5.0",
    "del": "^2.2.0",
    "gulp": "^3.9.1",
    "gulp-cached": "^1.1.0",
    "gulp-concat": "^2.6.0",
    "gulp-debug": "^2.1.2",
    "gulp-header": "^1.8.2",
    "gulp-jshint": "^2.0.1",
    "gulp-mirror": "^1.0.0",
    "gulp-plumber": "^1.1.0",
    "gulp-rename": "^1.2.2",
    "gulp-sourcemaps": "^1.6.0",
    "gulp-uglify": "^1.5.3",
    "gulp-util": "^3.0.7",
    "jaguarjs-jsdoc": "^1.0.0",
    "jsdoc": "^3.4.0",
    "jshint": "^2.9.2",
    "jshint-summary": "^0.4.0",
    "minimist": "^1.2.0",
    "mocha": "^2.5.3",
    "require-dir": "^0.3.0",
    "run-sequence": "^1.2.1",
    "testem": "^1.8.1",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^1.1.0",
    "watchify": "^3.7.0"
  },
  "files": [
    "bin/",
    "src/",
    "CONTRIBUTING.md",
    "LICENSE",
    "package.json",
    "README.md"
  ],
  "gitHead": "570b1726f63e5972ee20bd92730b527ee5797e1b",
  "homepage": "http://goodboydigital.com/",
  "license": "MIT",
  "main": "./src/index.js",
  "name": "pixi.js",
  "optionalDependencies": {},
  "readme": "Pixi.js â€” A 2D JavaScript Renderer\r\n=============\r\n\r\n![pixi.js logo](http://www.goodboydigital.com/pixijs/pixiV4_wide_full.jpg)\r\n\r\n\r\n\r\n\r\n[![Inline docs](http://inch-ci.org/github/GoodBoyDigital/pixi.js.svg?branch=dev)](http://inch-ci.org/github/GoodBoyDigital/pixi.js)\r\n[![Build Status](https://travis-ci.org/pixijs/pixi.js.svg?branch=dev)](https://travis-ci.org/pixijs/pixi.js)\r\n\r\nThe aim of this project is to provide a fast lightweight 2D library that works\r\nacross all devices. The Pixi renderer allows everyone to enjoy the power of\r\nhardware acceleration without prior knowledge of WebGL. Also, it's fast. Really fast.\r\n\r\nIf you want to keep up to date with the latest pixi.js news then feel free to follow us on twitter\r\n([@doormat23](https://twitter.com/doormat23), and [@rolnaaba](https://twitter.com/rolnaaba))\r\nand we will keep you posted! You can also check back on [our site](http://www.goodboydigital.com/blog)\r\nas any breakthroughs will be posted up there too!\r\n\r\n**Your support helps us make Pixi.js even better. Make your pledge on [Patreon](https://www.patreon.com/user?u=2384552&ty=h&u=2384552) and we'll love you forever!**\r\n\r\n[![projects](http://www.pixijs.com/wp-content/uploads/2013/05/headerPanel_projects-898x342.jpg)](http://www.pixijs.com/projects/)\r\n\r\n### What to Use Pixi.js for and When to Use It\r\n\r\nPixi.js is a rendering library that will allow you to create rich, interactive graphics, cross platform applications, and games without having to dive into the WebGL API or deal with browser and device compatibility.\r\n\r\nPixi.js has full [WebGL](https://en.wikipedia.org/wiki/WebGL) support and seamlessly falls back to HTML5's [canvas](https://en.wikipedia.org/wiki/Canvas_element) if needed. As a framework, Pixi.js is a fantastic tool for authoring interactive content, *especially with the move away from Adobe Flash in recent years*. Use it for your graphics rich, interactive websites, applications, and HTML5 games.  Out of the box cross-platform compatibility and graceful degredation mean you have less work to do and have more fun doing it! If you want to create polished and refined experiences relatively quickly, without delving into dense, low level code, all while avoiding the headaches of browser inconsistencies, then sprinkle your next project with some Pixi.js magic!\r\n\r\n**Boost your development and feel free to use your imagination!**\r\n\r\n### Demos ###\r\n\r\n- [WebGL Filters!](http://www.goodboydigital.com/pixijs/examples/15/indexAll.html)\r\n- [Run pixie run](http://www.goodboydigital.com/runpixierun)\r\n- [Fight for Everyone](http://www.goodboydigital.com/casestudies/fightforeveryone)\r\n- [Flash vs HTML](http://flashvhtml.com)\r\n- [Bunny Demo](http://www.goodboydigital.com/pixijs/bunnymark)\r\n- [Storm Brewing](http://www.goodboydigital.com/pixijs/storm)\r\n- [Filters Demo](http://www.goodboydigital.com/pixijs/examples/15/indexAll.html)\r\n- [Render Texture Demo](http://www.goodboydigital.com/pixijs/examples/11)\r\n- [Primitives Demo](http://www.goodboydigital.com/pixijs/examples/13)\r\n- [Masking Demo](http://www.goodboydigital.com/pixijs/examples/14)\r\n- [Interaction Demo](http://www.goodboydigital.com/pixijs/examples/6)\r\n- [photonstorm's Balls Demo](http://gametest.mobi/pixi/balls)\r\n- [photonstorm's Morph Demo](http://gametest.mobi/pixi/morph)\r\n\r\nThanks to [@photonstorm](https://twitter.com/photonstorm) for providing\r\nthose last 2 examples and allowing us to share the source code :)\r\n\r\n### Resources ###\r\n\r\n- API Documentation is [here](http://pixijs.github.io/docs).\r\n- Feature Examples are [here](https://pixijs.github.io/examples).\r\n- The Pixi.js Forum is [here](http://www.html5gamedevs.com/forum/15-pixijs).\r\n- Other misc tutorials and resources are [on the Wiki](https://github.com/pixijs/pixi.js/wiki/Resources).\r\n\r\n### Contribute ###\r\n\r\nWant to be part of the pixi.js project? Great! All are welcome! We will get there quicker\r\ntogether :) Whether you find a bug, have a great feature request or you fancy owning a task\r\nfrom the road map above feel free to get in touch.\r\n\r\nMake sure to read the [Contributing Guide](https://github.com/pixijs/pixi.js/blob/master/CONTRIBUTING.md)\r\nbefore submitting changes.\r\n\r\n### Current features ###\r\n\r\n- WebGL renderer (with automatic smart batching allowing for REALLY fast performance)\r\n- Canvas renderer (Fastest in town!)\r\n- Full scene graph\r\n- Super easy to use API (similar to the flash display list API)\r\n- Support for texture atlases\r\n- Asset loader / sprite sheet loader\r\n- Auto-detect which renderer should be used\r\n- Full Mouse and Multi-touch Interaction\r\n- Text\r\n- BitmapFont text\r\n- Multiline Text\r\n- Render Texture\r\n- Primitive Drawing\r\n- Masking\r\n- Filters\r\n- [User Plugins](https://github.com/pixijs/pixi.js/wiki/Pixi-v3-Plugins)\r\n\r\n### Basic Usage Example ###\r\n\r\n```js\r\n// You can use either `new PIXI.WebGLRenderer`, `new PIXI.CanvasRenderer`, or `PIXI.autoDetectRenderer`\r\n// which will try to choose the best renderer for the environment you are in.\r\nvar renderer = new PIXI.WebGLRenderer(800, 600);\r\n\r\n// The renderer will create a canvas element for you that you can then insert into the DOM.\r\ndocument.body.appendChild(renderer.view);\r\n\r\n// You need to create a root container that will hold the scene you want to draw.\r\nvar stage = new PIXI.Container();\r\n\r\n// Declare a global variable for our sprite so that the animate function can access it.\r\nvar bunny = null;\r\n\r\n// load the texture we need\r\nPIXI.loader.add('bunny', 'bunny.png').load(function (loader, resources) {\r\n    // This creates a texture from a 'bunny.png' image.\r\n    bunny = new PIXI.Sprite(resources.bunny.texture);\r\n\r\n    // Setup the position and scale of the bunny\r\n    bunny.position.x = 400;\r\n    bunny.position.y = 300;\r\n\r\n    bunny.scale.x = 2;\r\n    bunny.scale.y = 2;\r\n\r\n    // Add the bunny to the scene we are building.\r\n    stage.addChild(bunny);\r\n\r\n    // kick off the animation loop (defined below)\r\n    animate();\r\n});\r\n\r\nfunction animate() {\r\n    // start the timer for the next animation loop\r\n    requestAnimationFrame(animate);\r\n\r\n    // each frame we spin the bunny around a bit\r\n    bunny.rotation += 0.01;\r\n\r\n    // this is the main render call that makes pixi draw your container and its children.\r\n    renderer.render(stage);\r\n}\r\n```\r\n\r\n### How to build ###\r\n\r\nNote that for most users you don't need to build this project. If all you want is to use pixi, then\r\njust download one of our [prebuilt releases](https://github.com/pixijs/pixi.js/releases). Really\r\nthe only time you should need to build pixi.js is if you are developing it.\r\n\r\nIf you don't already have Node.js and NPM, go install them. Once you do, you can then install the gulp\r\nexecutable:\r\n\r\n```\r\n$> npm install -g gulp\r\n```\r\n\r\nThen, in the folder where you have cloned the repository, install the build dependencies using npm:\r\n\r\n```\r\n$> npm install\r\n```\r\n\r\nThen, to build the source, run:\r\n\r\n```\r\n$> gulp build\r\n```\r\n\r\nThis will create a minified version at `bin/pixi.min.js` and a non-minified version at `bin/pixi.js`\r\nwith all the plugins in the pixi.js project.\r\n\r\nIf there are specific plugins you don't want, say \"interaction\" or \"extras\", you can exclude those:\r\n\r\n```\r\n$> gulp build --exclude extras --exclude interaction\r\n```\r\n\r\nYou can also use the short-form `-e`:\r\n\r\n```\r\n$> gulp build -e extras -e interaction -e filters\r\n```\r\n\r\n### How to generate the documentation ###\r\n\r\nThe docs can be generated using npm:\r\n\r\n```\r\n$> npm run docs\r\n```\r\n\r\nThere is also a gulp task to generate them if you want to:\r\n\r\n```\r\n$> gulp jsdoc\r\n```\r\n\r\nThe documentation uses [Jaguar.js](https://github.com/davidshimjs/jaguarjs-jsdoc) and the jsdoc format, the configuration\r\nfile can be found at [gulp/utils/jsdoc.conf.json](https://github.com/pixijs/pixi.js/blob/dev/gulp/util/jsdoc.conf.json)\r\n\r\n### License ###\r\n\r\nThis content is released under the (http://opensource.org/licenses/MIT) MIT License.\r\n\r\n[![Analytics](https://ga-beacon.appspot.com/UA-39213431-2/pixi.js/index)](https://github.com/igrigorik/ga-beacon)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pixijs/pixi.js.git"
  },
  "scripts": {
    "build": "gulp",
    "docs": "jsdoc -c ./gulp/util/jsdoc.conf.json -R README.md",
    "start": "gulp && gulp watch",
    "test": "gulp && testem ci"
  },
  "version": "4.0.0"
}
